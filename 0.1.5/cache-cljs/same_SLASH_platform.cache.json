["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Number",["^ ","~$MAX_VALUE",["^ "]],"~$isNaN",["^ "],"~$Float32Array",["^ "],"~$ArrayBuffer",["^ "],"~$DataView",["^ ","~$prototype",["^ ","~$setFloat64",["^ "],"~$getUint32",["^ "],"~$setUint32",["^ "],"~$getFloat64",["^ "],"~$setFloat32",["^ "]]]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$same.platform","~:imports",null,"~:requires",null,"~:uses",null,"~:defs",["^ ","~$bit-diff-float",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","^C","~:line",89,"~:column",7,"~:end-line",89,"~:end-column",21,"~:arglists",["~#list",["~$quote",["^Q",[["~$f1","~$f2"]]]]],"~:doc","Difference between two floats in ULPs (i.e. number of representable numbers between them + 1)."],"^B","~$same.platform/bit-diff-float","^K","same/platform.cljc","^O",21,"~:method-params",["^Q",[["^S","^T"]]],"~:protocol-impl",null,"~:arglists-meta",["^Q",[null,null]],"^M",1,"~:variadic?",false,"^L",89,"~:ret-tag","~$any","^N",89,"~:max-fixed-arity",2,"~:fn-var",true,"^P",["^Q",["^R",["^Q",[["^S","^T"]]]]],"^U","Difference between two floats in ULPs (i.e. number of representable numbers between them + 1)."],"~$sign",["^ ","^I",null,"^J",["^ ","^K","^C","^L",22,"^M",7,"^N",22,"^O",11,"^P",["^Q",["^R",["^Q",[["~$f"]]]]],"^U","Return the sign of `f` (+1 if positive, -1 if negative, 0 if zero or NaN if NaN)."],"^B","~$same.platform/sign","^K","same/platform.cljc","^O",11,"^W",["^Q",[["~$f"]]],"^X",null,"^Y",["^Q",[null,null]],"^M",1,"^Z",false,"^L",22,"^[",["^A",["~$number",null]],"^N",22,"^11",1,"^12",true,"^P",["^Q",["^R",["^Q",[["~$f"]]]]],"^U","Return the sign of `f` (+1 if positive, -1 if negative, 0 if zero or NaN if NaN)."],"~$nan?",["^ ","^I",null,"^J",["^ ","^K","^C","^L",16,"^M",7,"^N",16,"^O",11,"^P",["^Q",["^R",["^Q",[["~$f"]]]]],"^U","Return true if `f` is NaN (Not-a-Number)"],"^B","~$same.platform/nan?","^K","same/platform.cljc","^O",11,"^W",["^Q",[["~$f"]]],"^X",null,"^Y",["^Q",[null,null]],"^M",1,"^Z",false,"^L",16,"^[","~$js","^N",16,"^11",1,"^12",true,"^P",["^Q",["^R",["^Q",[["~$f"]]]]],"^U","Return true if `f` is NaN (Not-a-Number)"],"~$is-array?",["^ ","^I",null,"^J",["^ ","^K","^C","^L",10,"^M",7,"^N",10,"^O",16,"^P",["^Q",["^R",["^Q",[["~$a"]]]]],"^U","Return true if `a` is an array."],"^B","~$same.platform/is-array?","^K","same/platform.cljc","^O",16,"^W",["^Q",[["~$a"]]],"^X",null,"^Y",["^Q",[null,null]],"^M",1,"^Z",false,"^L",10,"^[","~$boolean","^N",10,"^11",1,"^12",true,"^P",["^Q",["^R",["^Q",[["~$a"]]]]],"^U","Return true if `a` is an array."],"~$ulp*",["^ ","^I",null,"^J",["^ ","^K","^C","^L",47,"^M",11,"^N",47,"^O",15,"~:private",true,"^P",["^Q",["^R",["^Q",[["~$f"]]]]]],"^1=",true,"^B","~$same.platform/ulp*","^K","same/platform.cljc","^O",15,"^W",["^Q",[["~$f"]]],"^X",null,"^Y",["^Q",[null,null]],"^M",4,"^Z",false,"^L",47,"^[",["^A",["^10","^15"]],"^N",47,"^11",1,"^12",true,"^P",["^Q",["^R",["^Q",[["~$f"]]]]]],"~$to-float",["^ ","^I",null,"^J",["^ ","^K","^C","^L",38,"^M",7,"^N",38,"^O",15,"^P",["^Q",["^R",["^Q",[["~$f"]]]]],"^U","Round `f` to a single precision (32-bit) float."],"^B","~$same.platform/to-float","^K","same/platform.cljc","^O",15,"^W",["^Q",[["~$f"]]],"^X",null,"^Y",["^Q",[null,null]],"^M",1,"^Z",false,"^L",38,"^[","^10","^N",38,"^11",1,"^12",true,"^P",["^Q",["^R",["^Q",[["~$f"]]]]],"^U","Round `f` to a single precision (32-bit) float."],"~$bit-diff-double",["^ ","^I",null,"^J",["^ ","^K","^C","^L",76,"^M",7,"^N",76,"^O",22,"^P",["^Q",["^R",["^Q",[["^S","^T"]]]]],"^U","Difference between two doubles in ULPs (i.e. number of representable numbers between them + 1)."],"^B","~$same.platform/bit-diff-double","^K","same/platform.cljc","^O",22,"^W",["^Q",[["^S","^T"]]],"^X",null,"^Y",["^Q",[null,null]],"^M",1,"^Z",false,"^L",76,"^[","^10","^N",76,"^11",2,"^12",true,"^P",["^Q",["^R",["^Q",[["^S","^T"]]]]],"^U","Difference between two doubles in ULPs (i.e. number of representable numbers between them + 1)."],"~$max-value",["^ ","^B","~$same.platform/max-value","^K","same/platform.cljc","^L",6,"^M",1,"^N",6,"^O",15,"^J",["^ ","^K","^C","^L",6,"^M",6,"^N",6,"^O",15],"~:tag","^18"],"~$is-infinite?",["^ ","^I",null,"^J",["^ ","^K","^C","^L",32,"^M",7,"^N",32,"^O",19,"^P",["^Q",["^R",["^Q",[["~$f"]]]]],"^U","Return true if `f` is infinite."],"^B","~$same.platform/is-infinite?","^K","same/platform.cljc","^O",19,"^W",["^Q",[["~$f"]]],"^X",null,"^Y",["^Q",[null,null]],"^M",1,"^Z",false,"^L",32,"^[","^1;","^N",32,"^11",1,"^12",true,"^P",["^Q",["^R",["^Q",[["~$f"]]]]],"^U","Return true if `f` is infinite."],"~$ulp",["^ ","^I",null,"^J",["^ ","^K","^C","^L",68,"^M",7,"^N",68,"^O",10,"^P",["^Q",["^R",["^Q",[["~$f"]]]]],"^U","Units in the Last Place (ULP) of `f` (difference between f and the next largest representable number)."],"^B","~$same.platform/ulp","^K","same/platform.cljc","^O",10,"^W",["^Q",[["~$f"]]],"^X",null,"^Y",["^Q",[null,null]],"^M",1,"^Z",false,"^L",68,"^[",["^A",["^10","^15"]],"^N",68,"^11",1,"^12",true,"^P",["^Q",["^R",["^Q",[["~$f"]]]]],"^U","Units in the Last Place (ULP) of `f` (difference between f and the next largest representable number)."]],"~:require-macros",["^ "],"~:cljs.analyzer/constants",["^ ","~:seen",["^A",["~:else"]],"~:order",["^1M"]],"^U","Platform-specific code, to try to minimise reader conditionals in the rest of the codebase."]